package edu.kit.ipd.sdq.kamp4attack.tests.casestudies.travelplanner;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.Set;

import org.junit.jupiter.api.Test;
import org.palladiosimulator.pcm.confidentiality.context.system.pcm.structure.ServiceSpecification;

public class Vulnerability08Resource2ResourceWithLinkingTests extends TravelPlannerCaseStudy {

    public Vulnerability08Resource2ResourceWithLinkingTests() {
        this.PATH_ATTACKER = "travelplanner/Attacker_Propagation_Accuracy/04/08/test_model.attacker";
        this.PATH_CONTEXT = "travelplanner/Attacker_Propagation_Accuracy/04/08/test_model.context";
        this.PATH_MODIFICATION = "travelplanner/Attacker_Propagation_Accuracy/04/08/test_model.kamp4attackmodificationmarks";
    }

    @Test
    void propagation() {
        this.runAnalysis();

        final var change = this.getCredentials();

        assertEquals(2, change.getCompromisedassembly()
            .size());
        assertEquals(1, change.getCompromisedlinkingresource()
            .size());
        assertEquals(2, change.getCompromisedresource()
            .size());
        assertEquals(5, change.getCompromisedservice()
            .size());
        assertEquals(0, change.getContextchange()
            .size());

        assertTrue(this.checkAssembly(change));
        assertTrue(this.checkResource(change));
        assertTrue(this.checkLining(change));
        assertTrue(this.checkServiceRestriction(change));

    }

    @Override
    protected boolean assemblyNameMatch(final String name) {
        final var set = Set.of("Airline <Airline>", "TravelAgency <TravelAgency>");
        return set.contains(name);
    }

    @Override
    protected boolean linkingResourceNameMatch(final String name) {
        final var set = Set.of("Internet");
        return set.contains(name);
    }

    @Override
    protected boolean resourceNameMatch(final String name) {
        final var set = Set.of("AgencyServer", "AirlineServer");
        return set.contains(name);
    }

    @Override
    protected boolean checkServiceRestriction(final ServiceSpecification servicerestriction1) {
        final var setAssembly = Set.of("Airline <Airline>", "TravelAgency <TravelAgency>");

        final var equalAssembly = setAssembly.contains(servicerestriction1.getAssemblycontext()
            .getEntityName());
        if (!equalAssembly) {
            return equalAssembly;
        }
        final var setServices = Set.of("_1NGIAMOAEeWst9mTsticNA", "_y4dQkM5wEeWFJak7Wqvc0g", "_z-Ul0N5fEeeel_96Qa_d5A",
                "_brO1YN5fEeeel_96Qa_d5A", "_KubVAC2VEeuHsNng7h4KwA");
        // the pay commision method is not reachable since it is in another network
        final var returnValue = setServices.contains(servicerestriction1.getService()
            .getId());
        return returnValue;
    }
}
